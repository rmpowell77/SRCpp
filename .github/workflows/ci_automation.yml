name: CI for SRCpp

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  build:
    name: ${{ matrix.config.name }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "macOS Clang", os: macos-15 }
          - { name: "Ubuntu GCC", os: ubuntu-latest }
          - { name: "Windows MSVC", os: windows-latest }
        build_type: [Debug, Release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Unshallow checkout
        run: git fetch --prune --unshallow || true

      - name: Install Xcode (macOS)
        if: matrix.config.os == 'macos-15'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.3.0'

      - name: Update GCC (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y gcc-14 g++-14
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-14 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-14
          sudo update-alternatives --set gcc /usr/bin/gcc-14

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DSRCPP_WITH_TESTS=1 -DSRCPP_WITH_EXAMPLE=1

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Run tests
        run: ctest --test-dir build -C ${{ matrix.build_type }} --output-on-failure

      - name: Print failing test log
        if: failure()
        run: cat build/Testing/Temporary/LastTest.log || true

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()  # Always run, even if build failed
    steps:
      - name: Check build matrix result
        run: |
          echo "Build result: ${{ needs.build.result }}"
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ Some matrix builds failed"
            exit 1
          else
            echo "✅ All builds succeeded"
          fi

  release:
    name: Create Release Draft
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          bodyFile: ./LATEST_RELEASE_NOTES.md
          token: ${{ secrets.GITHUB_TOKEN }}
