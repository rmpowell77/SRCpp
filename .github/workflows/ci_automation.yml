# much of this inspired from: https://cristianadam.eu/20191222/using-github-actions-with-c-plus-plus-and-cmake/
# and also the excellent series from:
# https://www.edwardthomson.com/blog/github_actions_advent_calendar.html
name: CI action for SRCpp

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "macOS Latest Clang",
            os: macos-15,
          }
        - {
           name: "Ubuntu Latest GCC",
           os: ubuntu-latest,
          }
        - {
           name: "Windows Latest MSVC",
           os: windows-latest,
          }
        build_type: [Debug, Release]

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Checkout unshallow
      run: git fetch --unshallow

    - name: Installing Xcode (MacOS)
      if: matrix.config.os == 'macos-15'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.3.0'

    # - name: Installing Dependencies (MacOS)
    #   if: matrix.config.os == 'macos-15'
    #   continue-on-error: true
    #   run: |
    #     echo Doing Python3.11.6_1 woraround due to problems with linking.  The python steps may be removable in the future
    #     brew install python@3.11 || echo Step failed, continuing.
    #     brew link --overwrite python@3.11
        
    - name: Updating to gcc 14 (Linux)
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        sudo apt install gcc-14 g++-14
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 --slave /usr/bin/g++ g++ /usr/bin/g++-14 --slave /usr/bin/gcov gcov /usr/bin/gcov-14
        sudo update-alternatives --set gcc /usr/bin/gcc-14

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DSRCPP_WITH_TESTS=1 -DSRCPP_WITH_EXAMPLE=1
 
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} 

    - name: Run tests
      run: ctest --test-dir ${{github.workspace}}/build -C ${{matrix.build_type}} --output-on-failure

    - name: Output Test Log on Failure
      if: failure()
      run: cat ${{ github.workspace }}/build/Testing/Temporary/LastTest.log

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Check matrix success
        run: |
          if [ "${{ needs.build.result }}" != "success" ]; then
            echo "Some matrix jobs failed"
            exit 1
          fi
  release:
    if: contains(github.ref, 'tags/v')
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: checkout
      uses: actions/checkout@v3

      # using https://github.com/ncipollo/release-action
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        bodyFile: ./LATEST_RELEASE_NOTES.md
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}
